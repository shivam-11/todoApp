{"ast":null,"code":"var _jsxFileName = \"/Users/shivamsingh/Documents/react/learningapp/src/MyComponent/Task.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../App.css';\nimport { useDispatch } from \"react-redux\";\nimport { delet, completed, compdelet, editactive, editcompleted } from \"../actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Task = list => {\n  _s();\n\n  const dispatch = useDispatch(); //console.log(list.list.fun)\n\n  const active = (temp, id) => {\n    let v = prompt(\"edit value\");\n\n    if (temp === \"active\") {\n      dispatch(editactive(id, v));\n    } else {\n      dispatch(editcompleted(id, v));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", list.list.val, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onclick: () => active(list.list.fun1, list.list.index),\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          list.list.fun === \"delet\" ? dispatch(delet(list.list.index)) : dispatch(compdelet(list.list.index));\n        },\n        children: \" delete \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), list.list.bool ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(completed(list.list.index)),\n        children: \" completed \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Task, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/shivamsingh/Documents/react/learningapp/src/MyComponent/Task.js"],"names":["React","useDispatch","delet","completed","compdelet","editactive","editcompleted","Task","list","dispatch","active","temp","id","v","prompt","val","fun1","index","fun","bool"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,KAAR,EAAcC,SAAd,EAAwBC,SAAxB,EAAkCC,UAAlC,EAA6CC,aAA7C,QAAiE,kBAAjE;;;AAGA,OAAO,MAAMC,IAAI,GAAIC,IAAD,IAAS;AAAA;;AACzB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CADyB,CAEzB;;AACA,QAAMS,MAAM,GAAG,CAACC,IAAD,EAAMC,EAAN,KAAa;AACxB,QAAIC,CAAC,GAAGC,MAAM,CAAC,YAAD,CAAd;;AACA,QAAIH,IAAI,KAAK,QAAb,EAAsB;AAClBF,MAAAA,QAAQ,CAACJ,UAAU,CAACO,EAAD,EAAIC,CAAJ,CAAX,CAAR;AACH,KAFD,MAIA;AACIJ,MAAAA,QAAQ,CAACH,aAAa,CAACM,EAAD,EAAIC,CAAJ,CAAd,CAAR;AACH;AAGJ,GAXD;;AAcA,sBACI;AAAA,2BACA;AAAA,8BACI;AAAA,wBAAML,IAAI,CAACA,IAAL,CAAUO,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAI,MAAML,MAAM,CAACF,IAAI,CAACA,IAAL,CAAUQ,IAAX,EAAgBR,IAAI,CAACA,IAAL,CAAUS,KAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAK,MAAM;AAACT,UAAAA,IAAI,CAACA,IAAL,CAAUU,GAAV,KAAkB,OAAlB,GAA4BT,QAAQ,CAACP,KAAK,CAACM,IAAI,CAACA,IAAL,CAAUS,KAAX,CAAN,CAApC,GAA6DR,QAAQ,CAACL,SAAS,CAACI,IAAI,CAACA,IAAL,CAAUS,KAAX,CAAV,CAArE;AAAkG,SAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKT,IAAI,CAACA,IAAL,CAAUW,IAAV,gBAAgB;AAAQ,QAAA,OAAO,EAAK,MAAMV,QAAQ,CAACN,SAAS,CAACK,IAAI,CAACA,IAAL,CAAUS,KAAX,CAAV,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB,GAAwG,EAJ7G;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAUH,CA3BM;;GAAMV,I;UACQN,W;;;KADRM,I","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport {useDispatch} from \"react-redux\";\nimport {delet,completed,compdelet,editactive,editcompleted} from \"../actions/index\";\n\n\nexport const Task = (list) =>{\n    const dispatch = useDispatch();\n    //console.log(list.list.fun)\n    const active = (temp,id) => {\n        let v = prompt(\"edit value\");\n        if (temp === \"active\"){\n            dispatch(editactive(id,v));\n        }\n        else\n        {\n            dispatch(editcompleted(id,v));\n        }\n\n\n    }\n\n\n    return (\n        <>\n        <ul>\n            <li> {list.list.val} </li> \n            <button onclick = {() => active(list.list.fun1,list.list.index)}>edit</button>\n            <button onClick =  {() => {list.list.fun === \"delet\" ? dispatch(delet(list.list.index)):dispatch(compdelet(list.list.index))}} > delete </button> \n            {list.list.bool ?<button onClick =  {() => dispatch(completed(list.list.index))} > completed </button> : \"\"}    \n            </ul> \n        </>   \n    )\n};"]},"metadata":{},"sourceType":"module"}