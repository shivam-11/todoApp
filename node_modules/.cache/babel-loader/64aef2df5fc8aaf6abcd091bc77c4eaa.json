{"ast":null,"code":"const initialState = {\n  alltask: []\n}; //const [completed, setcompleted] = useState([]);\n//const [showActive, setShowActive] = useState(true);\n//const [showAlltask, setShowAlltask] = useState(false);\n//const [showCompleted, setShowCompleted] = useState(false);\n\nconst addtask = (state = initialState, action) => {\n  switch (action.type) {\n    case \"add\":\n      return { ...state,\n        alltask: [...state.alltask, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default addtask;\n/*\n\nconst alltask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => true);\n    \n};\n\nconst activetask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => true);\n    setShowAlltask(showAlltask => false);\n    \n};\n\nconst completedtask = () => {\n    setShowCompleted(showCompleted => true);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => false);\n};\n\nconst delet = (id) => {\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n    });\n});  \n\n    setalltk((oldItems) => {\n        return oldItems.filter((arrElem, index) => {\n            return index !== id;\n        });\n    });  \n};\n\nconst edit = (id) => {\n    console.log(\"hello\");\n};\n\nconst complet = (id) => {\n\n    console.log(active);\n    setcompleted((oldItems) => {\n      return [...oldItems,active[id]]\n    });\n\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    }); \n};\n\nconst compdelet = (id) => {\n    setcompleted((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n\n    setalltk((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n};\n*/","map":{"version":3,"sources":["/Users/shivamsingh/Documents/react/learningapp/src/reducers/add.js"],"names":["initialState","alltask","addtask","state","action","type","payload"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB,C,CAKA;AACA;AACA;AACA;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAiC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AAAY,aAAO,EAAC,GAAGF,KAAJ;AAAUF,QAAAA,OAAO,EAAC,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAkBG,MAAM,CAACE,OAAzB;AAAlB,OAAP;;AACZ;AAAS,aAAOH,KAAP;AAFX;AAKH,CAND;;AAQA,eAAeD,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nconst initialState = {\n    alltask: [],\n\n};\n\n//const [completed, setcompleted] = useState([]);\n//const [showActive, setShowActive] = useState(true);\n//const [showAlltask, setShowAlltask] = useState(false);\n//const [showCompleted, setShowCompleted] = useState(false);\n  \n\nconst addtask = (state = initialState, action) =>{\n    switch (action.type){\n      case \"add\": return {...state,alltask:[...state.alltask,action.payload]};\n      default: return state;\n    }\n\n};\n\nexport default addtask;\n\n/*\n\nconst alltask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => true);\n    \n};\n\nconst activetask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => true);\n    setShowAlltask(showAlltask => false);\n    \n};\n\nconst completedtask = () => {\n    setShowCompleted(showCompleted => true);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => false);\n};\n\nconst delet = (id) => {\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n    });\n});  \n\n    setalltk((oldItems) => {\n        return oldItems.filter((arrElem, index) => {\n            return index !== id;\n        });\n    });  \n};\n\nconst edit = (id) => {\n    console.log(\"hello\");\n};\n\nconst complet = (id) => {\n\n    console.log(active);\n    setcompleted((oldItems) => {\n      return [...oldItems,active[id]]\n    });\n\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    }); \n};\n\nconst compdelet = (id) => {\n    setcompleted((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n\n    setalltk((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n};\n*/"]},"metadata":{},"sourceType":"module"}