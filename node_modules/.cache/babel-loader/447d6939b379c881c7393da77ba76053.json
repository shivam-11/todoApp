{"ast":null,"code":"var _jsxFileName = \"/Users/shivamsingh/Documents/react/learningapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState } from 'react';\nimport { Head } from \"./MyComponent/Heading\";\nimport { Input } from \"./MyComponent/Input\";\nimport { Button1 } from \"./MyComponent/Button1\";\nimport { Button2 } from \"./MyComponent/Button2\";\nimport { Button3 } from \"./MyComponent/Button3\";\nimport { TaskHead } from \"./MyComponent/TaskHead\";\nimport { Task } from \"./MyComponent/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [active, setactive] = useState([]);\n  const [alltk, setalltk] = useState([]);\n  const [completed, setcompleted] = useState([]);\n  const [showActive, setShowActive] = useState(true);\n  const [showAlltask, setShowAlltask] = useState(false);\n  const [showCompleted, setShowCompleted] = useState(false);\n\n  const addtask = value => {\n    setactive(oldItems => {\n      return [...oldItems, value];\n    });\n    setalltk(oldItems => {\n      return [...oldItems, value];\n    });\n  };\n\n  const alltask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => true);\n  };\n\n  const activetask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => true);\n    setShowAlltask(showAlltask => false);\n  };\n\n  const completedtask = () => {\n    setShowCompleted(showCompleted => true);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => false);\n  };\n\n  const delet = id => {\n    setactive(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n    setalltk(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  const edit = id => {\n    console.log(\"hello\");\n  };\n\n  const complet = id => {\n    console.log(active);\n    setcompleted(oldItems => {\n      return [...oldItems, active[id]];\n    });\n    setactive(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  const compdelet = id => {\n    setcompleted(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n    setalltk(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      addtask: addtask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button1, {\n      alltask: alltask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button2, {\n      activetask: activetask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button3, {\n      completedtask: completedtask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [showActive && /*#__PURE__*/_jsxDEV(TaskHead, {\n        TH: {\n          length: active.length,\n          desc: \"Active Task\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 24\n      }, this), showAlltask && /*#__PURE__*/_jsxDEV(TaskHead, {\n        TH: {\n          length: alltk.length,\n          desc: \"All Task\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this), showCompleted && /*#__PURE__*/_jsxDEV(TaskHead, {\n        TH: {\n          length: completed.length,\n          desc: \"Completed Task\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }, this), showActive && active.map((itemval, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            list: {\n              index: index,\n              val: itemval,\n              fun1: edit,\n              fun2: delet,\n              fun3: complet\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 20\n          }, this)\n        }, void 0, false);\n      }), showAlltask && alltk.map((itemval, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            list: {\n              index: index,\n              val: itemval,\n              fun1: edit,\n              fun2: delet,\n              fun3: complet\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 20\n          }, this)\n        }, void 0, false);\n      }), showCompleted && completed.map((itemval, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            list: {\n              index: index,\n              val: itemval,\n              fun1: edit,\n              fun2: compdelet,\n              fun3: complet\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 20\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"anFQ4z3k2RFnHwtx1hJT+RCrGvU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shivamsingh/Documents/react/learningapp/src/App.js"],"names":["useState","Head","Input","Button1","Button2","Button3","TaskHead","Task","App","active","setactive","alltk","setalltk","completed","setcompleted","showActive","setShowActive","showAlltask","setShowAlltask","showCompleted","setShowCompleted","addtask","value","oldItems","alltask","activetask","completedtask","delet","id","filter","arrElem","index","edit","console","log","complet","compdelet","length","desc","map","itemval","val","fun1","fun2","fun3"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport {Head} from \"./MyComponent/Heading\";\nimport {Input} from \"./MyComponent/Input\";\nimport {Button1} from \"./MyComponent/Button1\";\nimport {Button2} from \"./MyComponent/Button2\";\nimport {Button3} from \"./MyComponent/Button3\";  \nimport {TaskHead} from \"./MyComponent/TaskHead\";\nimport {Task} from \"./MyComponent/Task\";\n\n\nfunction App() {\n\n  const [active, setactive] = useState([]);\n  const [alltk, setalltk] = useState([]);\n\n  const [completed, setcompleted] = useState([]);\n\n  const [showActive, setShowActive] = useState(true);\n  const [showAlltask, setShowAlltask] = useState(false);\n  const [showCompleted, setShowCompleted] = useState(false);\n  \n  \n  \n\n  const addtask = (value) =>{\n\n    setactive((oldItems) => {\n      return [...oldItems,value]\n     });\n \n    setalltk((oldItems) => {\n      return [...oldItems,value]\n    });\n\n  };\n\n\n  const alltask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => true);\n    \n  };\n\n  const activetask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => true);\n    setShowAlltask(showAlltask => false);\n    \n  };\n\n  const completedtask = () => {\n    setShowCompleted(showCompleted => true);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => false);\n  };\n\n  const delet = (id) => {\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n\n    setalltk((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n  };\n\n  const edit = (id) => {\n    console.log(\"hello\");\n    \n  };\n\n  const complet = (id) => {\n\n    console.log(active);\n    setcompleted((oldItems) => {\n      return [...oldItems,active[id]]\n    });\n\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    }); \n\n  };\n\n  const compdelet = (id) => {\n    setcompleted((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n\n    setalltk((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n  };\n\n  \n\n  return (\n    <>\n      \n      <Head/>\n      <Input addtask = {addtask}/>\n      <Button1 alltask = {alltask}/>\n      <Button2 activetask = {activetask}/>\n      <Button3 completedtask = {completedtask}/>  \n      \n     \n      <div >\n      \n        {showActive && <TaskHead TH = {{ length: active.length, desc:\"Active Task\"}}/>}\n        {showAlltask && <TaskHead TH = {{ length: alltk.length, desc:\"All Task\"}}/>}\n        {showCompleted && <TaskHead TH = {{ length: completed.length, desc:\"Completed Task\"}}/>}\n            \n        {showActive && active.map((itemval,index) => {\n          return <><Task list = {{index:index, val:itemval,fun1:edit,fun2:delet,fun3:complet}}/></>\n        })}\n\n        {showAlltask && alltk.map((itemval,index) => {\n          return <><Task list = {{index:index, val:itemval,fun1:edit,fun2:delet,fun3:complet}}/></>\n        })}\n\n        {showCompleted && completed.map((itemval,index) => {\n          return <><Task list = {{index:index, val:itemval,fun1:edit,fun2:compdelet,fun3:complet}}/></>\n        })}\n     \n      </div>\n      \n      \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}