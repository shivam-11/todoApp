{"ast":null,"code":"var _jsxFileName = \"/Users/shivamsingh/Documents/react/learningapp/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState } from 'react';\nimport CacheBuster from './CacheBuster';\nimport { Head } from \"./MyComponent/Heading\";\nimport { InputTask } from \"./MyComponent/InputTask\";\nimport { Button1 } from \"./MyComponent/Button1\";\nimport { Button2 } from \"./MyComponent/Button2\";\nimport { Button3 } from \"./MyComponent/Button3\";\nimport { TaskHead } from \"./MyComponent/TaskHead\";\nimport { Task } from \"./MyComponent/Task\";\nimport Modal from 'react-modal';\nimport { Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { Component } from 'react';\nimport { modalGlobalConfig } from 'antd/lib/modal/confirm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    const mystate = [\"123\"];\n    return /*#__PURE__*/_jsxDEV(CacheBuster, {\n      children: ({\n        loading,\n        isLatestVersion,\n        refreshCacheAndReload\n      }) => {\n        if (loading) return null;\n\n        if (!loading && !isLatestVersion) {\n          refreshCacheAndReload();\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputTask, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button1, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button2, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button3, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(Modal, {\n              className: \"relative p-8 bg-white w-full max-w-md m-auto flex-col flex\",\n              isOpen: true,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-3xl font-bold\",\n                children: \"Refresh Page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-1xl text-gray-500 \",\n                children: \"You Should refresh the page Otherwise it may cause issue ?? After refresh you can continue your work!!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"border-2 bg-green-400 py-1 px-1 mx-40 align-left hover:border-gray-500\",\n                  onClick: refreshCacheAndReload,\n                  children: \"Refresh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [mystate.value === 0 && /*#__PURE__*/_jsxDEV(TaskHead, {\n              TH: {\n                length: mystate.activetask.length,\n                desc: \"Active Task\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), mystate.value === 1 && /*#__PURE__*/_jsxDEV(TaskHead, {\n              TH: {\n                length: mystate.alltask.length,\n                desc: \"All Task\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), mystate.value === 2 && /*#__PURE__*/_jsxDEV(TaskHead, {\n              TH: {\n                length: mystate.completedtask.length,\n                desc: \"Completed Task\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), mystate.value === 0 && mystate.activetask.map((itemval, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  list: {\n                    index: index,\n                    val: itemval,\n                    fun: \"delet\",\n                    fun1: \"active\",\n                    bool: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false);\n            }), mystate.value === 1 && mystate.alltask.map((itemval, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  list: {\n                    index: index,\n                    val: itemval,\n                    fun: \"delet\",\n                    fun1: \"active\",\n                    bool: false\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false);\n            }), mystate.value === 2 && mystate.completedtask.map((itemval, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  list: {\n                    index: index,\n                    val: itemval,\n                    fun: \"compdelet\",\n                    fun1: \"completed\",\n                    bool: false\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shivamsingh/Documents/react/learningapp/src/App.js"],"names":["useState","CacheBuster","Head","InputTask","Button1","Button2","Button3","TaskHead","Task","Modal","Button","useSelector","useDispatch","React","Component","modalGlobalConfig","App","render","mystate","loading","isLatestVersion","refreshCacheAndReload","value","length","activetask","desc","alltask","completedtask","map","itemval","index","val","fun","fun1","bool"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport CacheBuster from './CacheBuster';\nimport {Head} from \"./MyComponent/Heading\";\nimport {InputTask} from \"./MyComponent/InputTask\";\nimport {Button1} from \"./MyComponent/Button1\";\nimport {Button2} from \"./MyComponent/Button2\";\nimport {Button3} from \"./MyComponent/Button3\";  \nimport {TaskHead} from \"./MyComponent/TaskHead\";\nimport {Task} from \"./MyComponent/Task\";\nimport Modal from 'react-modal';\nimport {Button} from \"antd\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport React ,{ Component } from 'react';\nimport { modalGlobalConfig } from 'antd/lib/modal/confirm';\n\n\n\nclass App extends Component{\n\n\n  render(){\n\n        const mystate = [\"123\"];\n        return (\n          <CacheBuster>\n            {({loading, isLatestVersion, refreshCacheAndReload }) => {\n              if (loading) return null;\n              if (!loading && !isLatestVersion) {\n              refreshCacheAndReload();\n            }\n\n        return(\n          <>          \n            <Head/>\n            <InputTask/>\n            <Button1/>\n            <Button2/>\n            <Button3/> \n            <div className = \"\">\n            <Modal className = \"relative p-8 bg-white w-full max-w-md m-auto flex-col flex\"isOpen = {true} >         \n              <h1 className = \"text-3xl font-bold\">Refresh Page</h1>\n\n              <h3 className = \"text-1xl text-gray-500 \">You Should refresh the page Otherwise it may cause issue ?? After refresh you can continue your work!!</h3>\n              <div>\n                <Button className = \"border-2 bg-green-400 py-1 px-1 mx-40 align-left hover:border-gray-500\" onClick = {refreshCacheAndReload}>Refresh</Button>\n              </div>  \n            </Modal> \n            </div>      \n            <div >\n      \n            {mystate.value === 0 && <TaskHead TH = {{ length: mystate.activetask.length, desc:\"Active Task\"}}/>}\n            {mystate.value === 1 && <TaskHead TH = {{ length: mystate.alltask.length, desc:\"All Task\"}}/>}\n            {mystate.value === 2 && <TaskHead TH = {{ length: mystate.completedtask.length, desc:\"Completed Task\"}}/>}\n            \n            {mystate.value === 0 && mystate.activetask.map((itemval,index) => {\n              return <><Task list = {{index:index,val:itemval,fun:\"delet\", fun1 : \"active\",bool:true}}/></>\n            })}\n\n            {mystate.value === 1 && mystate.alltask.map((itemval,index) => {\n              return <><Task list = {{index:index,val:itemval,fun:\"delet\",fun1: \"active\",bool:false}}/></>\n            })}\n\n            {mystate.value === 2 && mystate.completedtask.map((itemval,index) => {\n              return <><Task list = {{index:index,val:itemval,fun:\"compdelet\",fun1: \"completed\",bool:false}}/></>\n            })}\n     \n            </div>\n          </>\n        );\n\n      }\n    }\n    </CacheBuster>    \n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}