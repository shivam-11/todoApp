{"ast":null,"code":"var _jsxFileName = \"/Users/shivamsingh/Documents/react/learningapp/src/App.js\";\n//import logo from './logo.svg';\nimport './App.css'; //import { useState } from 'react';\n\nimport CacheBuster from './CacheBuster';\nimport { Head } from \"./MyComponent/Heading\";\nimport { InputTask } from \"./MyComponent/InputTask\";\nimport { Button1 } from \"./MyComponent/Button1\";\nimport { Button2 } from \"./MyComponent/Button2\";\nimport { Button3 } from \"./MyComponent/Button3\";\nimport { TaskHead } from \"./MyComponent/TaskHead\";\nimport { Task } from \"./MyComponent/Task\";\nimport { Refresh } from \"./MyComponent/Refresh\"; //import {MoButton} from \"antd\";\n//import {useSelector, useDispatch} from \"react-redux\";\n\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false\n    };\n\n    this.showModal = () => {\n      console.log(\"hello\");\n      setState(true);\n    };\n\n    this.handleOk = () => {\n      console.log(\"hello\");\n      this.setState(false);\n    };\n\n    this.handleCancel = () => {\n      setState(false);\n    };\n  }\n\n  render() {\n    const mystate = [\"123\"];\n    return /*#__PURE__*/_jsxDEV(CacheBuster, {\n      children: ({\n        loading,\n        isLatestVersion,\n        refreshCacheAndReload\n      }) => {\n        if (loading) return null;\n\n        if (!loading && !isLatestVersion) {\n          refreshCacheAndReload();\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputTask, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button1, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button2, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button3, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: showModal,\n            className: \"border-2 bg-green-400 py-1 px-3 my-2 hover:border-gray-500\",\n            children: \"Open Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            title: \"Basic Modal\",\n            visible: isModalVisible,\n            onOk: handleOk,\n            onCancel: handleCancel,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some contents...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some contents...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some contents...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [mystate.value === 0 && /*#__PURE__*/_jsxDEV(TaskHead, {\n              TH: {\n                length: mystate.activetask.length,\n                desc: \"Active Task\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this), mystate.value === 1 && /*#__PURE__*/_jsxDEV(TaskHead, {\n              TH: {\n                length: mystate.alltask.length,\n                desc: \"All Task\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this), mystate.value === 2 && /*#__PURE__*/_jsxDEV(TaskHead, {\n              TH: {\n                length: mystate.completedtask.length,\n                desc: \"Completed Task\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this), mystate.value === 0 && mystate.activetask.map((itemval, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  list: {\n                    index: index,\n                    val: itemval,\n                    fun: \"delet\",\n                    fun1: \"active\",\n                    bool: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false);\n            }), mystate.value === 1 && mystate.alltask.map((itemval, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  list: {\n                    index: index,\n                    val: itemval,\n                    fun: \"delet\",\n                    fun1: \"active\",\n                    bool: false\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false);\n            }), mystate.value === 2 && mystate.completedtask.map((itemval, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  list: {\n                    index: index,\n                    val: itemval,\n                    fun: \"compdelet\",\n                    fun1: \"completed\",\n                    bool: false\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shivamsingh/Documents/react/learningapp/src/App.js"],"names":["CacheBuster","Head","InputTask","Button1","Button2","Button3","TaskHead","Task","Refresh","React","Component","App","state","visible","showModal","console","log","setState","handleOk","handleCancel","render","mystate","loading","isLatestVersion","refreshCacheAndReload","isModalVisible","value","length","activetask","desc","alltask","completedtask","map","itemval","index","val","fun","fun1","bool"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\n//import { useState } from 'react';\nimport CacheBuster from './CacheBuster';\nimport {Head} from \"./MyComponent/Heading\";\nimport {InputTask} from \"./MyComponent/InputTask\";\nimport {Button1} from \"./MyComponent/Button1\";\nimport {Button2} from \"./MyComponent/Button2\";\nimport {Button3} from \"./MyComponent/Button3\";  \nimport {TaskHead} from \"./MyComponent/TaskHead\";\nimport {Task} from \"./MyComponent/Task\";\nimport {Refresh} from \"./MyComponent/Refresh\";\n//import {MoButton} from \"antd\";\n//import {useSelector, useDispatch} from \"react-redux\";\nimport React ,{ Component } from 'react';\n\n\n\n\nclass App extends Component{\n\n  state = { visible:false };\n\n  showModal = () => {\n    console.log(\"hello\");\n    setState(true);\n  };\n\n  handleOk = () => {\n    console.log(\"hello\");\n    this.setState(false);\n  };\n\n  handleCancel = () => {\n    setState(false);\n  };\n\n\n  render(){\n\n        const mystate = [\"123\"];\n        return (\n          <CacheBuster>\n            {({loading, isLatestVersion, refreshCacheAndReload }) => {\n              if (loading) return null;\n              if (!loading && !isLatestVersion) {\n              refreshCacheAndReload();\n            }\n\n        return(\n          <>          \n            <Head/>\n            <InputTask/>\n            <Button1/>\n            <Button2/>\n            <Button3/>\n            \n            <Button type=\"primary\" onClick={showModal} className = \"border-2 bg-green-400 py-1 px-3 my-2 hover:border-gray-500\">\n            Open Modal\n            </Button>\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            </Modal>\n            \n                 \n            <div >\n      \n            {mystate.value === 0 && <TaskHead TH = {{ length: mystate.activetask.length, desc:\"Active Task\"}}/>}\n            {mystate.value === 1 && <TaskHead TH = {{ length: mystate.alltask.length, desc:\"All Task\"}}/>}\n            {mystate.value === 2 && <TaskHead TH = {{ length: mystate.completedtask.length, desc:\"Completed Task\"}}/>}\n            \n            {mystate.value === 0 && mystate.activetask.map((itemval,index) => {\n              return <><Task list = {{index:index,val:itemval,fun:\"delet\", fun1 : \"active\",bool:true}}/></>\n            })}\n\n            {mystate.value === 1 && mystate.alltask.map((itemval,index) => {\n              return <><Task list = {{index:index,val:itemval,fun:\"delet\",fun1: \"active\",bool:false}}/></>\n            })}\n\n            {mystate.value === 2 && mystate.completedtask.map((itemval,index) => {\n              return <><Task list = {{index:index,val:itemval,fun:\"compdelet\",fun1: \"completed\",bool:false}}/></>\n            })}\n     \n            </div>\n\n            \n          </>\n        );\n\n      }\n    }\n    </CacheBuster>    \n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}