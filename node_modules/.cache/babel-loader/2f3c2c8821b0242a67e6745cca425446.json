{"ast":null,"code":"var _jsxFileName = \"/Users/shivamsingh/Documents/react/learningapp/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState } from 'react';\nimport { Head } from \"./MyComponent/Heading\";\nimport { Input } from \"./MyComponent/Input\";\nimport { Button1 } from \"./MyComponent/Button1\";\nimport { Button2 } from \"./MyComponent/Button2\";\nimport { Button3 } from \"./MyComponent/Button3\";\nimport { TaskHead } from \"./MyComponent/TaskHead\";\nimport { Task } from \"./MyComponent/Task\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      addtask: addtask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button1, {\n      alltask: alltask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button2, {\n      activetask: activetask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button3, {\n      completedtask: completedtask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [showActive && /*#__PURE__*/_jsxDEV(TaskHead, {\n        TH: {\n          length: active.length,\n          desc: \"Active Task\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this), showAlltask && /*#__PURE__*/_jsxDEV(TaskHead, {\n        TH: {\n          length: alltk.length,\n          desc: \"All Task\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), showCompleted && /*#__PURE__*/_jsxDEV(TaskHead, {\n        TH: {\n          length: completed.length,\n          desc: \"Completed Task\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }, this), showActive && active.map((itemval, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            list: {\n              index: index,\n              val: itemval,\n              fun1: edit,\n              fun2: delet,\n              fun3: complet,\n              bool: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }, this)\n        }, void 0, false);\n      }), showAlltask && alltk.map((itemval, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            list: {\n              index: index,\n              val: itemval,\n              fun1: edit,\n              fun2: delet,\n              bool: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 20\n          }, this)\n        }, void 0, false);\n      }), showCompleted && completed.map((itemval, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            list: {\n              index: index,\n              val: itemval,\n              fun1: edit,\n              fun2: compdelet,\n              bool: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shivamsingh/Documents/react/learningapp/src/App.js"],"names":["useState","Head","Input","Button1","Button2","Button3","TaskHead","Task","useSelector","useDispatch","App","addtask","alltask","activetask","completedtask","showActive","length","active","desc","showAlltask","alltk","showCompleted","completed","map","itemval","index","val","fun1","edit","fun2","delet","fun3","complet","bool","compdelet"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport {Head} from \"./MyComponent/Heading\";\nimport {Input} from \"./MyComponent/Input\";\nimport {Button1} from \"./MyComponent/Button1\";\nimport {Button2} from \"./MyComponent/Button2\";\nimport {Button3} from \"./MyComponent/Button3\";  \nimport {TaskHead} from \"./MyComponent/TaskHead\";\nimport {Task} from \"./MyComponent/Task\";\n\nimport {useSelector, useDispatch} from \"react-redux\";\n\nfunction App() {\n\n  return (\n    <>\n      \n      <Head/>\n      <Input addtask = {addtask}/>\n      <Button1 alltask = {alltask}/>\n      <Button2 activetask = {activetask}/>\n      <Button3 completedtask = {completedtask}/>  \n      \n     \n      <div >\n      \n        {showActive && <TaskHead TH = {{ length: active.length, desc:\"Active Task\"}}/>}\n        {showAlltask && <TaskHead TH = {{ length: alltk.length, desc:\"All Task\"}}/>}\n        {showCompleted && <TaskHead TH = {{ length: completed.length, desc:\"Completed Task\"}}/>}\n            \n        {showActive && active.map((itemval,index) => {\n          return <><Task list = {{index:index, val:itemval,fun1:edit,fun2:delet,fun3:complet,bool:true}}/></>\n        })}\n\n        {showAlltask && alltk.map((itemval,index) => {\n          return <><Task list = {{index:index, val:itemval,fun1:edit,fun2:delet,bool:false}}/></>\n        })}\n\n        {showCompleted && completed.map((itemval,index) => {\n          return <><Task list = {{index:index, val:itemval,fun1:edit,fun2:compdelet,bool:false}}/></>\n        })}\n     \n      </div>\n      \n      \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}