{"ast":null,"code":"const initialState = {\n  value: 0,\n  alltask: [],\n  activetask: [],\n  completedtask: []\n};\n\nconst addtask = (state = initialState, action) => {\n  //console.log(\"hello\");\n  switch (action.type) {\n    case \"add\":\n      return { ...state,\n        alltask: [...state.alltask, action.payload],\n        activetask: [...state.alltask, action.payload]\n      };\n\n    case \"deleted\":\n      let a = state.activetask(0, action.payload);\n      let b = state.activetask(action.payload + 1);\n      console.log(a.concat(b));\n      return { ...state,\n        alltask: a.concat(b),\n        activetask: a.concat(b)\n      };\n\n    case \"bool\":\n      return { ...state,\n        value: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default addtask;","map":{"version":3,"sources":["/Users/shivamsingh/Documents/react/learningapp/src/reducers/add.js"],"names":["initialState","value","alltask","activetask","completedtask","addtask","state","action","type","payload","a","b","console","log","concat"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,UAAU,EAAC,EAHM;AAIjBC,EAAAA,aAAa,EAAC;AAJG,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAiC;AAC7C;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AAAY,aAAO,EAAC,GAAGF,KAAJ;AAAUJ,QAAAA,OAAO,EAAC,CAAC,GAAGI,KAAK,CAACJ,OAAV,EAAkBK,MAAM,CAACE,OAAzB,CAAlB;AAAoDN,QAAAA,UAAU,EAAC,CAAC,GAAGG,KAAK,CAACJ,OAAV,EAAkBK,MAAM,CAACE,OAAzB;AAA/D,OAAP;;AACZ,SAAK,SAAL;AACI,UAAIC,CAAC,GAAGJ,KAAK,CAACH,UAAN,CAAiB,CAAjB,EAAmBI,MAAM,CAACE,OAA1B,CAAR;AACA,UAAIE,CAAC,GAAGL,KAAK,CAACH,UAAN,CAAiBI,MAAM,CAACE,OAAP,GAAe,CAAhC,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASH,CAAT,CAAZ;AACA,aAAO,EAAC,GAAGL,KAAJ;AAAUJ,QAAAA,OAAO,EAACQ,CAAC,CAACI,MAAF,CAASH,CAAT,CAAlB;AAA8BR,QAAAA,UAAU,EAACO,CAAC,CAACI,MAAF,CAASH,CAAT;AAAzC,OAAP;;AACJ,SAAK,MAAL;AAAa,aAAO,EAAC,GAAGL,KAAJ;AAAUL,QAAAA,KAAK,EAACM,MAAM,CAACE;AAAvB,OAAP;;AAEb;AAAS,aAAOH,KAAP;AATX;AAYH,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["\nconst initialState = {\n    value: 0,  \n    alltask: [],\n    activetask:[],\n    completedtask:[]\n\n};\n\n\nconst addtask = (state = initialState, action) =>{\n    //console.log(\"hello\");\n    switch (action.type){\n      case \"add\": return {...state,alltask:[...state.alltask,action.payload],activetask:[...state.alltask,action.payload]};\n      case \"deleted\": \n          let a = state.activetask(0,action.payload)\n          let b = state.activetask(action.payload+1)\n          console.log(a.concat(b))\n          return {...state,alltask:a.concat(b),activetask:a.concat(b)}\n      case \"bool\": return {...state,value:action.payload}\n      \n      default: return state;\n    }\n\n};\n\nexport default addtask;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}