{"ast":null,"code":"var _jsxFileName = \"/Users/shivamsingh/Documents/react/learningapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState } from 'react';\nimport { Head } from \"./MyComponent/Heading\";\nimport { Input } from \"./MyComponent/Input\";\nimport { Button1 } from \"./MyComponent/Button1\";\nimport { Button2 } from \"./MyComponent/Button2\";\nimport { Button3 } from \"./MyComponent/Button3\";\nimport { TaskHead } from \"./MyComponent/TaskHead\";\nimport { Task } from \"./MyComponent/Task\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const mystate = useSelector(state => state.addtask);\n  console.log(mystate);\n  const [active, setactive] = useState([]);\n  const [alltk, setalltk] = useState([]);\n  const [completed, setcompleted] = useState([]);\n\n  const delet = id => {\n    setactive(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n    setalltk(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  const edit = id => {\n    console.log(\"hello\");\n  };\n\n  const complet = id => {\n    console.log(active);\n    setcompleted(oldItems => {\n      return [...oldItems, active[id]];\n    });\n    setactive(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  const compdelet = id => {\n    setcompleted(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n    setalltk(oldItems => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button3, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [mystate.value === 0 && /*#__PURE__*/_jsxDEV(TaskHead, {\n        TH: {\n          length: mystate.activetask.length,\n          desc: \"Active Task\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this), mystate.value === 1 && /*#__PURE__*/_jsxDEV(TaskHead, {\n        TH: {\n          length: mystate.alltask.length,\n          desc: \"All Task\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }, this), mystate.value === 2 && /*#__PURE__*/_jsxDEV(TaskHead, {\n        TH: {\n          length: mystate.completedtask.length,\n          desc: \"Completed Task\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }, this), mystate.value === 0 && mystate.activetask.map((itemval, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            list: {\n              index: index,\n              val: itemval,\n              fun1: edit,\n              fun2: delet,\n              fun3: complet,\n              bool: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 20\n          }, this)\n        }, void 0, false);\n      }), mystate.value === 1 && mystate.alltask.map((itemval, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            list: {\n              index: index,\n              val: itemval,\n              fun1: edit,\n              fun2: delet,\n              bool: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 20\n          }, this)\n        }, void 0, false);\n      }), mystate.value === 2 && mystate.completedtask.map((itemval, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            list: {\n              index: index,\n              val: itemval,\n              fun1: edit,\n              fun2: compdelet,\n              bool: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 20\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"N5JVsInS8TEBkCHprmX6Jcn/CZ4=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shivamsingh/Documents/react/learningapp/src/App.js"],"names":["useState","Head","Input","Button1","Button2","Button3","TaskHead","Task","useSelector","useDispatch","App","mystate","state","addtask","console","log","active","setactive","alltk","setalltk","completed","setcompleted","delet","id","oldItems","filter","arrElem","index","edit","complet","compdelet","value","length","activetask","desc","alltask","completedtask","map","itemval","val","fun1","fun2","fun3","bool"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport {Head} from \"./MyComponent/Heading\";\nimport {Input} from \"./MyComponent/Input\";\nimport {Button1} from \"./MyComponent/Button1\";\nimport {Button2} from \"./MyComponent/Button2\";\nimport {Button3} from \"./MyComponent/Button3\";  \nimport {TaskHead} from \"./MyComponent/TaskHead\";\nimport {Task} from \"./MyComponent/Task\";\n\nimport {useSelector, useDispatch} from \"react-redux\";\n\nfunction App() {\n\nconst mystate = useSelector((state) => state.addtask);\nconsole.log(mystate);\n\nconst [active, setactive] = useState([]);\nconst [alltk, setalltk] = useState([]);\n\nconst [completed, setcompleted] = useState([]);\n\nconst delet = (id) => {\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n    });\n});  \n\n    setalltk((oldItems) => {\n        return oldItems.filter((arrElem, index) => {\n            return index !== id;\n        });\n    });  \n};\n\nconst edit = (id) => {\n    console.log(\"hello\");\n};\n\nconst complet = (id) => {\n\n    console.log(active);\n    setcompleted((oldItems) => {\n      return [...oldItems,active[id]]\n    });\n\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    }); \n};\n\nconst compdelet = (id) => {\n    setcompleted((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n\n    setalltk((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n};\n\n  return (\n    <>\n      \n      <Head/>\n      <Input/>\n      <Button1/>\n      <Button2/>\n      <Button3/>  \n      \n     \n      <div >\n      \n        {mystate.value === 0 && <TaskHead TH = {{ length: mystate.activetask.length, desc:\"Active Task\"}}/>}\n        {mystate.value === 1 && <TaskHead TH = {{ length: mystate.alltask.length, desc:\"All Task\"}}/>}\n        {mystate.value === 2 && <TaskHead TH = {{ length: mystate.completedtask.length, desc:\"Completed Task\"}}/>}\n            \n        {mystate.value === 0 && mystate.activetask.map((itemval,index) => {\n          return <><Task list = {{index:index, val:itemval,fun1:edit,fun2:delet,fun3:complet,bool:true}}/></>\n        })}\n\n        {mystate.value === 1 && mystate.alltask.map((itemval,index) => {\n          return <><Task list = {{index:index, val:itemval,fun1:edit,fun2:delet,bool:false}}/></>\n        })}\n\n        {mystate.value === 2 && mystate.completedtask.map((itemval,index) => {\n          return <><Task list = {{index:index, val:itemval,fun1:edit,fun2:compdelet,bool:false}}/></>\n        })}\n     \n      </div>\n      \n      \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}