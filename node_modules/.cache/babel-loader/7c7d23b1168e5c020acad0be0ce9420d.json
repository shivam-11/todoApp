{"ast":null,"code":"import { useState } from 'react';\nconst [active, setactive] = useState([]);\nconst [alltk, setalltk] = useState([]);\nconst [completed, setcompleted] = useState([]);\nconst [showActive, setShowActive] = useState(true);\nconst [showAlltask, setShowAlltask] = useState(false);\nconst [showCompleted, setShowCompleted] = useState(false);\n\nconst addtask = value => {\n  setactive(oldItems => {\n    return [...oldItems, value];\n  });\n  setalltk(oldItems => {\n    return [...oldItems, value];\n  });\n};\n\nexport default addtask;\n\nconst alltask = () => {\n  setShowCompleted(showCompleted => false);\n  setShowActive(showActive => false);\n  setShowAlltask(showAlltask => true);\n};\n\nconst activetask = () => {\n  setShowCompleted(showCompleted => false);\n  setShowActive(showActive => true);\n  setShowAlltask(showAlltask => false);\n};\n\nconst completedtask = () => {\n  setShowCompleted(showCompleted => true);\n  setShowActive(showActive => false);\n  setShowAlltask(showAlltask => false);\n};\n\nconst delet = id => {\n  setactive(oldItems => {\n    return oldItems.filter((arrElem, index) => {\n      return index !== id;\n    });\n  });\n  setalltk(oldItems => {\n    return oldItems.filter((arrElem, index) => {\n      return index !== id;\n    });\n  });\n};\n\nconst edit = id => {\n  console.log(\"hello\");\n};\n\nconst complet = id => {\n  console.log(active);\n  setcompleted(oldItems => {\n    return [...oldItems, active[id]];\n  });\n  setactive(oldItems => {\n    return oldItems.filter((arrElem, index) => {\n      return index !== id;\n    });\n  });\n};\n\nconst compdelet = id => {\n  setcompleted(oldItems => {\n    return oldItems.filter((arrElem, index) => {\n      return index !== id;\n    });\n  });\n  setalltk(oldItems => {\n    return oldItems.filter((arrElem, index) => {\n      return index !== id;\n    });\n  });\n};","map":{"version":3,"sources":["/Users/shivamsingh/Documents/react/learningapp/src/reducers/add.js"],"names":["useState","active","setactive","alltk","setalltk","completed","setcompleted","showActive","setShowActive","showAlltask","setShowAlltask","showCompleted","setShowCompleted","addtask","value","oldItems","alltask","activetask","completedtask","delet","id","filter","arrElem","index","edit","console","log","complet","compdelet"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\n\nconst [active, setactive] = useState([]);\nconst [alltk, setalltk] = useState([]);\n\nconst [completed, setcompleted] = useState([]);\nconst [showActive, setShowActive] = useState(true);\nconst [showAlltask, setShowAlltask] = useState(false);\nconst [showCompleted, setShowCompleted] = useState(false);\n  \n\nconst addtask = (value) =>{\n\n    setactive((oldItems) => {\n      return [...oldItems,value]\n     });\n \n    setalltk((oldItems) => {\n      return [...oldItems,value]\n    });\n};\n\nexport default addtask;\n\n\nconst alltask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => true);\n    \n};\n\nconst activetask = () => {\n    setShowCompleted(showCompleted => false);\n    setShowActive(showActive => true);\n    setShowAlltask(showAlltask => false);\n    \n};\n\nconst completedtask = () => {\n    setShowCompleted(showCompleted => true);\n    setShowActive(showActive => false);\n    setShowAlltask(showAlltask => false);\n};\n\nconst delet = (id) => {\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n    });\n});  \n\n    setalltk((oldItems) => {\n        return oldItems.filter((arrElem, index) => {\n            return index !== id;\n        });\n    });  \n};\n\nconst edit = (id) => {\n    console.log(\"hello\");\n};\n\nconst complet = (id) => {\n\n    console.log(active);\n    setcompleted((oldItems) => {\n      return [...oldItems,active[id]]\n    });\n\n    setactive((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    }); \n};\n\nconst compdelet = (id) => {\n    setcompleted((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n\n    setalltk((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });  \n};"]},"metadata":{},"sourceType":"module"}